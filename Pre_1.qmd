---
title: "Datos y MedioAmbiente Urbano"
author: "Ulises Hoil - @EcoData"
format:
  revealjs:
    theme: dark
    transition: slide
    background-transition: fade
    highlight-style: github
    code-fold: true
    code-summary: "Ver código"
    fig-width: 10
    fig-height: 6
    incremental: true
    footer: "Datos Ambientales Mérida, Yucatán"
    css: custom.css
editor: visual
---

```{r setup}
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(sf)
library(DT)
library(kableExtra)
library(ggplot2)
library(viridis)
library(RColorBrewer)
library(plotly)
library(mapgl)

# Configuración para gráficas
theme_set(theme_minimal() +
  theme(
    text = element_text(color = "white"),
    plot.background = element_rect(fill = "transparent", color = NA),
    panel.background = element_rect(fill = "transparent", color = NA),
    panel.grid = element_line(color = "rgba(255,255,255,0.1)"),
    axis.text = element_text(color = "white"),
    axis.title = element_text(color = "white"),
    legend.text = element_text(color = "white"),
    legend.title = element_text(color = "white"),
    plot.title = element_text(color = "#64ffda", size = 16, face = "bold"),
    plot.subtitle = element_text(color = "white", size = 12)
  ))
```

##  {background-color="#1a1a2e" background-image="Datos/Merida.jpg" background-opacity="0.4"}

------------------------------------------------------------------------

## ¿Datos...? {background-color="#16213e"}

::::: columns
::: {.column width="50%"}
##### **Mérida 2024: Récords Climáticos**

-   **43 °C** temperatura máxima récord (mayo 2024)\
-   **10-12 °C** diferencia térmica centro-periferia\
-   **1.1 millones** hab. Zona Metropolitana\
-   **3.2 %** crecimiento poblacional anual\
:::

::: {.column width="50%"}
##### Problematicas

-   **Efecto isla de calor** intenso\
-   **Sequías** prolongadas (nov-abril)\
-   **Lluvias torrenciales** (jun-oct)\
-   **Cenotes** amenazados por urbanización\
:::
:::::

------------------------------------------------------------------------

## Crecimiento

```{r crecimiento-merida}

# Datos reales de crecimiento poblacional Mérida
anos <- c(1990, 2000, 2010, 2020, 2024)
poblacion_zm <- c(523, 705, 897, 1035, 1142) # Miles de habitantes
poblacion_municipio <- c(400, 542, 777, 892, 973)

datos_poblacion <- data.frame(
  Año = rep(anos, 2),
  Tipo = rep(c("Zona Metropolitana", "Municipio Mérida"), each = 5),
  Poblacion = c(poblacion_zm, poblacion_municipio)
)

p1 <- ggplot(datos_poblacion, aes(x = Año, y = Poblacion, color = Tipo)) +
  geom_line(size = 2, alpha = 0.8) +
  geom_point(size = 4, alpha = 0.8) +
  scale_color_manual(values = c("Zona Metropolitana" = "#64ffda", "Municipio Mérida" = "#ff6b6b")) +
  labs(
    subtitle = "Miles de habitantes",
    x = "Año", y = "Población (miles)",
    color = "Área"
  ) +
  theme(legend.position = "bottom")

ggplotly(p1) %>%
  layout(plot_bgcolor = 'rgba(0,0,0,0)', paper_bgcolor = 'rgba(0,0,0,0)')
```

------------------------------------------------------------------------

## Isla de Calor {background-color="#8b0000"}

::::: columns
::: {.column width="50%"}
### **Crisis térmica 2024**

- **43 °C** récord histórico (mayo)\
- **39 °C** promedio máximas (abr-may)\
- **10-12 °C** diferencia centro-norte\
- **Centro Histórico**: zona más caliente
:::

::: {.column width="50%"}
### **Factores de riesgo**

-   **Pavimento**: retiene 60 % más calor\
-   **Edificios coloniales**: muros gruesos de piedra\
-   **Escasa cobertura arbórea** en el centro\
-   **Densidad vehicular** alta\
:::
:::::

------------------------------------------------------------------------

## Temperatura superficial 2024

![Temperaturas 2024](Datos/mapa_temperaturas_con_perfiles.png){fig-align="center" width="100%"}

------------------------------------------------------------------------

### Mapa interactivo

```{r setup-temp, message=FALSE, warning=FALSE, include=FALSE}
library(terra)
library(mapgl)

# Capa de temperatura media diaria (LST) 2024
temMid <- rast("Datos/LST_Day_Stats_2024.tif")$LST_Day_Mean
colores <- c("#2b83ba", "#7fbeac", "#b4e1a7",
             "#ece3a1", "#edc486", "#de4e31")
# 3) Cortes (mismo largo que la paleta)
```

```{r mapa-temperatura, message=FALSE, warning=FALSE}
mapgltemp <- maplibre(
  zoom   = 9,
  center = c(-89.617, 20.967)          # Mérida
) |>
  add_image_source(
    id     = "temp",
    data   = temMid,
    colors = colores
  ) |>
  add_raster_layer(
    id             = "temp",
    source         = "temp",
    raster_opacity = 0.6)
mapgltemp  
```

------------------------------------------------------------------------

## Promedios de temperatura

```{r temperatura-sectores}

# Datos de temperatura por sectores de Mérida (basados en estudios reales)
sectores <- data.frame(
  Sector = c("Centro Histórico", "Norte (Montejo)", "Poniente", "Oriente", 
             "Sur", "Dzityá", "Cholul", "Conkal"),
  Temp_Max_C = c(42.5, 38.2, 41.0, 40.8, 39.5, 37.8, 38.5, 37.2),
  Cobertura_Verde_Pct = c(15, 35, 20, 18, 22, 45, 40, 50),
  Densidad_Pob = c("Muy Alta", "Alta", "Alta", "Media", "Media", "Baja", "Baja", "Baja")
)

p2 <- ggplot(sectores, aes(x = Cobertura_Verde_Pct, y = Temp_Max_C, 
                          color = Densidad_Pob, size = Temp_Max_C)) +
  geom_point(alpha = 0.8) +
  geom_text(aes(label = Sector), vjust = -1.2, size = 3, color = "white") +
  scale_color_manual(values = c("Muy Alta" = "#e74c3c", "Alta" = "#f39c12", 
                               "Media" = "#f1c40f", "Baja" = "#2ecc71")) +
  scale_size_continuous(range = c(4, 10)) +
  labs(
    title = "Cobertura Verde vs Temperatura",
    subtitle = "Sectores de Mérida, Yucatán",
    x = "Cobertura Verde (%)", y = "Temperatura Máxima (°C)",
    color = "Densidad", size = "Temp (°C)"
  )

ggplotly(p2) %>%
  layout(plot_bgcolor = 'rgba(0,0,0,0)', paper_bgcolor = 'rgba(0,0,0,0)')
```

------------------------------------------------------------------------

### **Tecnologías de Monitoreo**

-   **Satélites Landsat**: Temperatura superficial
-   **Estaciones meteorológicas**: CONAGUA (3 estaciones)
-   **Sensores IoT**: Red ciudadana emergente
-   **Drones térmicos**: Mapeo de techos calientes

------------------------------------------------------------------------

## Crecimiento y Huella Urbana {background-color="#FDF5E6" auto-animate="true"}

![Vegetación y cambios](Datos/mapa.png){fig-align="center"}

------------------------------------------------------------------------

## ![Variación a lo largo de los años](Datos/NDVI_Merida_2017_2024.png){width="819"}

------------------------------------------------------------------------

## Vegetación 2017 - 2024

```{r}
#| include: false

v2017 <-terra::rast("Datos/2017_mod.tif")
v2024 <-terra::rast("Datos/2024_mod.tif")

coloresverdes <- rev(c(
  "#00541B",  # verde muy oscuro
  "#1B7837",  # verde bosque
  "#4DAF4A",  # verde medio
  "#7FBC41",  # verde lima
  "#B8E186",  # verde paste  
  "#FFFFFF"  # blanco
))

```

```{r}
#| include: false

  
m1 <- maplibre(zoom = 9, center = c(-89.617, 20.967)) |>
  add_image_source(
    id             = "2017",
    data         = v2017,
    colors         =coloresverdes ) |>
  add_raster_layer(
    id             = "2017",
    source         = "2017",
    raster_opacity = 0.5)

m2 <- maplibre(zoom = 9, center = c(-89.617, 20.967)) |>
  add_image_source(
    id             = "2024",
    data         = v2024,
    colors         = coloresverdes) |>
  add_raster_layer(
    id             = "2024",
    source         = "2024",
    raster_opacity = 0.5)
```

```{r}
mapacomparadoveg <- mapgl::compare(m1, m2)
mapacomparadoveg
```

------------------------------------------------------------------------

## Temperatura y Vegetación {background-color="#2c3e50"}

```{r}

mapatempcom<- mapgl::compare(mapgltemp, m2)
mapatempcom
```

------------------------------------------------------------------------

## Gestión del Agua {background-color="#2980b9"}

```{r}
#| message: false
#| warning: false
#| include: false
agua <- sf::st_read("Datos/open_street_cenotes.gpkg")


library(sf)
library(leaflet)          
library(leaflet.extras)    

bbox <- st_bbox(agua)
ctr  <- c(lng = mean(bbox[c("xmin","xmax")]),
          lat = mean(bbox[c("ymin","ymax")]))

agua$popup <- sprintf(
  "<b>%s</b><br/>Tipo: %s<br/>OSM id: %s",
  ifelse(is.na(agua$name), "Sin nombre", agua$name),
  agua$natural, agua$osm_id
)


m <- leaflet(agua) |>
  addProviderTiles(providers$CartoDB.Voyager) |>
  setView(lng = ctr["lng"], lat = ctr["lat"], zoom = 7) |>
  addMarkers(
    popup  = ~popup,
    clusterOptions = markerClusterOptions()
  ) |>
  addFullscreenControl() |>
  addScaleBar(position = "bottomleft")

```

```{r}
#| message: false
#| warning: false
m
```

------------------------------------------------------------------------

## ![Acceso al agua](Datos/photo_2025-06-20_22-19-27.jpg)

------------------------------------------------------------------------

## ![Función de Salinidad](Datos/photo_2025-06-20_22-19-23.jpg)

------------------------------------------------------------------------

### **Monitoreo Tecnológico**

-   **Pozos de monitoreo**: 15 activos CONAGUA
-   **Sensores nivel freático**
-   **Imágenes satelitales**

------------------------------------------------------------------------

### **Datos Críticos**

-   **300 L/hab/día** consumo promedio
-   **40%** pérdidas en red distribución
-   **25%** incremento demanda (2019-2024)
-   **Pocas plantas** de tratamiento de las aguas residuales

------------------------------------------------------------------------

## Movilidad {background-color="#34495e"}

### ![Congestionamientos](Datos/CAPTURA.png){width="615"}

------------------------------------------------------------------------

### **El Desafío de la Movilidad**

**85%** viajes en transporte privado

**Va y Ven**: 180,000 usuarios/día

**BiciRuta**: 28 km de ciclovías

**45 min** tiempo promedio de viaje

------------------------------------------------------------------------

## Ciclovias

```{r}
#| message: false
#| warning: false
#| include: false
ciclovias <- sf::st_read("Datos/Ciclovias_BISIGET_Merida")

ciclovias$popup <- sprintf(
  "<b>%s</b><br/>%s",
  ciclovias$title,
  gsub("\\\\n", "<br/>", ciclovias$descriptio)
)

# B) Paleta basada en la columna 'stroke'
#    Si quieres mapear por otro atributo, cámbialo aquí.
pal_ciclovia <- colorFactor(
  palette = unique(ciclovias$stroke),   # toma los hex ya definidos
  domain   = ciclovias$stroke
)

# ---------------- 3. Calcular centro/zoom ----------------
bbox_ciclo <- st_bbox(ciclovias)
ctr        <- c(
  lng = mean(bbox_ciclo[c("xmin", "xmax")]),
  lat = mean(bbox_ciclo[c("ymin", "ymax")])
)

# ---------------- 4. Mapa base ----------------
mapa1 <- leaflet(options = leafletOptions(preferCanvas = TRUE)) |>
  addProviderTiles(providers$CartoDB.Voyager) |>
  setView(lng = ctr["lng"], lat = ctr["lat"], zoom = 12)

# ---------------- 5. Añadir ciclovías ----------------
cicloviasmap <- mapa1 |>
  addPolylines(
    data      = ciclovias,
    color     = ~stroke,      # usa el hex de cada registro
    weight    = 4,
    opacity   = 0.9,
    popup     = ~popup,
    group     = "Ciclovías",
    label     = ~title        # aparece al pasar el cursor
  ) |>
  addLegend(
    position = "bottomright",
    pal      = pal_ciclovia,
    values   = ciclovias$stroke,
    title    = "Ciclovías",
    labFormat = labelFormat(
      transform = function(x) {
        # muestra el título en la leyenda (uno por color)
        título <- ciclovias$title[match(x, ciclovias$stroke)]
        ifelse(is.na(título), x, título)
      }
    )
  )





```

```{r}
#| message: false
#| warning: false
# ---------------- 8. Visualizar ----------------
cicloviasmap

```

------------------------------------------------------------------------


## ![Ciclovias H3](Datos/densidad_ciclovías.png){width="638"}


------------------------------------------------------------------------

## VA Y VEN {background-color="#2c3e50"}

```{r}
#| message: false
#| warning: false
#| include: false
vayven <- sf::st_read("Datos/Rutas_vayven/rutas.shp")

library(viridisLite)

vayven$popup <- sprintf(
  "<b>Ruta VayVen:</b> %s<br/><i>fid:</i> %s",
  vayven$shape_id, vayven$fid
)


pal_vay <- colorFactor(
  palette = viridis(length(unique(vayven$shape_id)), option = "D"),
  domain  = vayven$shape_id
)


bbox_v  <- st_bbox(vayven)
ctr_v   <- c(lng = mean(bbox_v[c("xmin","xmax")]),
             lat = mean(bbox_v[c("ymin","ymax")]))

VAVEN <- leaflet(options = leafletOptions(preferCanvas = TRUE)) |>
  addProviderTiles(providers$CartoDB.Voyager) |>
  setView(lng = ctr_v["lng"], lat = ctr_v["lat"], zoom = 7)

# ───────────────── 3. Agregar la capa VayVen ─────────────────
VAVENMAP <- VAVEN|>
  addPolylines(
    data      = vayven,
    color     = ~pal_vay(shape_id),   # un color por ruta
    weight    = 3,
    opacity   = 0.9,
    popup     = ~popup,
    group     = "VayVen"
  ) 


```

```{r}
#| message: false
#| warning: false
VAVENMAP

```

------------------------------------------------------------------------

![Densidad de rutas](Datos/densidad_rutas_va_y_ven.png){width="866" height="649"}

-----------------------------------------------------------------------

## ![Densidad paraderos](Datos/densidad_paradas_vyv.png){width="875"}

-----------------------------------------------------------------------

## Gracias !!



- Ulises Hoil 
- uliseshoil@icloud.com
- tel: 9901928240

--------------------------------------------------------------------------
---
title: "Datos y MedioAmbiente Urbano"
author: "Ulises Hoil - @EcoData"
format:
  revealjs:
    theme: dark
    transition: slide
    background-transition: fade
    highlight-style: github
    code-fold: true
    code-summary: "Ver c√≥digo"
    fig-width: 10
    fig-height: 6
    incremental: true
    footer: "Datos Ambientales M√©rida, Yucat√°n"
    css: custom.css
editor: visual
---

```{r setup}
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(sf)
library(DT)
library(kableExtra)
library(ggplot2)
library(viridis)
library(RColorBrewer)
library(plotly)
library(mapgl)

# Configuraci√≥n para gr√°ficas
theme_set(theme_minimal() +
  theme(
    text = element_text(color = "white"),
    plot.background = element_rect(fill = "transparent", color = NA),
    panel.background = element_rect(fill = "transparent", color = NA),
    panel.grid = element_line(color = "rgba(255,255,255,0.1)"),
    axis.text = element_text(color = "white"),
    axis.title = element_text(color = "white"),
    legend.text = element_text(color = "white"),
    legend.title = element_text(color = "white"),
    plot.title = element_text(color = "#64ffda", size = 16, face = "bold"),
    plot.subtitle = element_text(color = "white", size = 12)
  ))
```

##  {background-color="#1a1a2e" background-image="Datos/Merida.jpg" background-opacity="0.4"}

------------------------------------------------------------------------

## ¬øPor qu√© M√©rida necesita datos ambientales? {background-color="#16213e"}

::: columns
::: {.column width="50%"}
##### **M√©rida 2024: R√©cords Clim√°ticos**

-   **43 ¬∞C** temperatura m√°xima r√©cord (mayo 2024)\
-   **10-12 ¬∞C** diferencia t√©rmica centro-periferia\
-   **1.1 millones** hab. Zona Metropolitana\
-   **3.2 %** crecimiento poblacional anual\
:::

::: {.column width="50%"}
##### Problematicas

-   **Efecto isla de calor** intenso\
-   **Sequ√≠as** prolongadas (nov-abril)\
-   **Lluvias torrenciales** (jun-oct)\
-   **Cenotes** amenazados por urbanizaci√≥n\
:::
:::

------------------------------------------------------------------------

## Crecimiento

```{r crecimiento-merida}

# Datos reales de crecimiento poblacional M√©rida
anos <- c(1990, 2000, 2010, 2020, 2024)
poblacion_zm <- c(523, 705, 897, 1035, 1142) # Miles de habitantes
poblacion_municipio <- c(400, 542, 777, 892, 973)

datos_poblacion <- data.frame(
  A√±o = rep(anos, 2),
  Tipo = rep(c("Zona Metropolitana", "Municipio M√©rida"), each = 5),
  Poblacion = c(poblacion_zm, poblacion_municipio)
)

p1 <- ggplot(datos_poblacion, aes(x = A√±o, y = Poblacion, color = Tipo)) +
  geom_line(size = 2, alpha = 0.8) +
  geom_point(size = 4, alpha = 0.8) +
  scale_color_manual(values = c("Zona Metropolitana" = "#64ffda", "Municipio M√©rida" = "#ff6b6b")) +
  labs(
    subtitle = "Miles de habitantes",
    x = "A√±o", y = "Poblaci√≥n (miles)",
    color = "√Årea"
  ) +
  theme(legend.position = "bottom")

ggplotly(p1) %>%
  layout(plot_bgcolor = 'rgba(0,0,0,0)', paper_bgcolor = 'rgba(0,0,0,0)')
```

------------------------------------------------------------------------

## üå°Ô∏è Isla de Calor {background-color="#8b0000"}

::: columns
::: {.column width="50%"}
### **Crisis t√©rmica 2024**

**43 ¬∞C** r√©cord hist√≥rico (mayo)\
Ô∏è**39 ¬∞C** promedio m√°ximas (abr-may)\
**10-12 ¬∞C** diferencia centro-norte\
**Centro Hist√≥rico**: zona m√°s caliente
:::

::: {.column width="50%"}
### **Factores de riesgo**

-   **Pavimento**: retiene 60 % m√°s calor\
-   **Edificios coloniales**: muros gruesos de piedra\
-   **Escasa cobertura arb√≥rea** en el centro\
-   **Densidad vehicular** alta\
:::
:::

## Temperatura superficial 2024

![Temperaturas 2024](Datos/mapa_temperaturas_con_perfiles.png){fig-align="center" width="100%"}

------------------------------------------------------------------------

### Mapa interactivo

```{r setup-temp, message=FALSE, warning=FALSE, include=FALSE}
library(terra)
library(mapgl)

# Capa de temperatura media diaria (LST) 2024
temMid <- rast("Datos/LST_Day_Stats_2024.tif")$LST_Day_Mean
colores <- c("#2b83ba", "#7fbeac", "#b4e1a7",
             "#ece3a1", "#edc486", "#de4e31")
# 3) Cortes (mismo largo que la paleta)
```

```{r mapa-temperatura, message=FALSE, warning=FALSE}
mapgltemp <- maplibre(
  zoom   = 9,
  center = c(-89.617, 20.967)          # M√©rida
) |>
  add_image_source(
    id     = "temp",
    data   = temMid,
    colors = colores
  ) |>
  add_raster_layer(
    id             = "temp",
    source         = "temp",
    raster_opacity = 0.6)
mapgltemp  
```

------------------------------------------------------------------------

## Promedios de temperatura

```{r temperatura-sectores}

# Datos de temperatura por sectores de M√©rida (basados en estudios reales)
sectores <- data.frame(
  Sector = c("Centro Hist√≥rico", "Norte (Montejo)", "Poniente", "Oriente", 
             "Sur", "Dzity√°", "Cholul", "Conkal"),
  Temp_Max_C = c(42.5, 38.2, 41.0, 40.8, 39.5, 37.8, 38.5, 37.2),
  Cobertura_Verde_Pct = c(15, 35, 20, 18, 22, 45, 40, 50),
  Densidad_Pob = c("Muy Alta", "Alta", "Alta", "Media", "Media", "Baja", "Baja", "Baja")
)

p2 <- ggplot(sectores, aes(x = Cobertura_Verde_Pct, y = Temp_Max_C, 
                          color = Densidad_Pob, size = Temp_Max_C)) +
  geom_point(alpha = 0.8) +
  geom_text(aes(label = Sector), vjust = -1.2, size = 3, color = "white") +
  scale_color_manual(values = c("Muy Alta" = "#e74c3c", "Alta" = "#f39c12", 
                               "Media" = "#f1c40f", "Baja" = "#2ecc71")) +
  scale_size_continuous(range = c(4, 10)) +
  labs(
    title = "Cobertura Verde vs Temperatura",
    subtitle = "Sectores de M√©rida, Yucat√°n",
    x = "Cobertura Verde (%)", y = "Temperatura M√°xima (¬∞C)",
    color = "Densidad", size = "Temp (¬∞C)"
  )

ggplotly(p2) %>%
  layout(plot_bgcolor = 'rgba(0,0,0,0)', paper_bgcolor = 'rgba(0,0,0,0)')
```

------------------------------------------------------------------------

### **Tecnolog√≠as de Monitoreo**

-   **Sat√©lites Landsat**: Temperatura superficial
-   **Estaciones meteorol√≥gicas**: CONAGUA (3 estaciones)
-   **Sensores IoT**: Red ciudadana emergente
-   **Drones t√©rmicos**: Mapeo de techos calientes

------------------------------------------------------------------------

## Crecimiento y Huella Urbana {background-color="#FDF5E6" auto-animate="true"}

![](Datos/mapa.png){fig-align="center"}

------------------------------------------------------------------------

## Vegetaci√≥n 2017 - 2024

```{r}
#| include: false

v2017 <-terra::rast("Datos/2017_mod.tif")
v2024 <-terra::rast("Datos/2024_mod.tif")

coloresverdes <- rev(c(
  "#00541B",  # verde muy oscuro
  "#1B7837",  # verde bosque
  "#4DAF4A",  # verde medio
  "#7FBC41",  # verde lima
  "#B8E186",  # verde paste  
  "#FFFFFF"  # blanco
))

```

```{r}
#| include: false

  
m1 <- maplibre(zoom = 9, center = c(-89.617, 20.967)) |>
  add_image_source(
    id             = "2017",
    data         = v2017,
    colors         =coloresverdes ) |>
  add_raster_layer(
    id             = "2017",
    source         = "2017",
    raster_opacity = 0.5)

m2 <- maplibre(zoom = 9, center = c(-89.617, 20.967)) |>
  add_image_source(
    id             = "2024",
    data         = v2024,
    colors         = coloresverdes) |>
  add_raster_layer(
    id             = "2024",
    source         = "2024",
    raster_opacity = 0.5)
```

```{r}
mapgl::compare(m1, m2)
```

------------------------------------------------------------------------


## Temperatura y Vegetaci√≥n {background-color="#2c3e50"}

```{r}

mapgl::compare(mapgltemp, m2)

```

------------------------------------------------------------------------


## üíß Gesti√≥n del Agua: Cenotes y Sostenibilidad {background-color="#2980b9"}


```{r}
agua <- sf::st_read("Datos/open_street_cenotes.gpkg")

cuerposagua <- mapview::mapview(agua)
```

```{r}
#| message: false
#| warning: false
cuerposagua
```
------------------------------------------------------------------------


### **üõ∞Ô∏è Monitoreo Tecnol√≥gico**

-   **Pozos de monitoreo**: 15 activos CONAGUA
-   **Sensores nivel fre√°tico**: Red IoT emergente
-   **Im√°genes satelitales**: Cambios cenotes
-   **Drones acu√°ticos**: Mapeo batim√©trico

```{r mapa-cenotes}
#| fig-cap: "Cenotes y Pozos Urbanos M√©rida"

library(leaflet)

# Datos cenotes y pozos principales en zona urbana
cenotes_pozos <- data.frame(
  nombre = c("Cenote Xlacah", "Cenote San Ignacio", "Pozo Norte 1", "Pozo Centro",
             "Cenote Sambul√°", "Pozo Sur 2", "Pozo Oriente", "Cenote Dzonot Carpio"),
  lat = c(21.058, 20.978, 20.985, 20.967, 20.945, 20.940, 20.970, 20.920),
  lng = c(-89.612, -89.630, -89.640, -89.617, -89.625, -89.615, -89.595, -89.605),
  tipo = c("Cenote", "Cenote", "Pozo", "Pozo", "Cenote", "Pozo", "Pozo", "Cenote"),
  profundidad_m = c(15, 12, 45, 38, 8, 52, 41, 20),
  estado = c("Natural", "Urbano", "Activo", "Activo", "Amenazado", "Activo", "Activo", "Natural")
)

# Crear mapa
leaflet(cenotes_pozos) %>%
  addTiles() %>%
  addCircleMarkers(
    ~lng, ~lat,
    color = ~case_when(
      tipo == "Cenote" & estado == "Natural" ~ "#2ecc71",
      tipo == "Cenote" & estado != "Natural" ~ "#f39c12", 
      tipo == "Pozo" ~ "#3498db",
      TRUE ~ "#e74c3c"
    ),
    popup = ~paste("<b>", nombre, "</b><br>",
                   "Tipo:", tipo, "<br>",
                   "Profundidad:", profundidad_m, "m<br>",
                   "Estado:", estado),
    radius = ~sqrt(profundidad_m),
    opacity = 0.8
  ) %>%
  addLegend("bottomright",
           colors = c("#2ecc71", "#f39c12", "#3498db"),
           labels = c("Cenote Natural", "Cenote Urbano", "Pozo Abastecimiento"),
           title = "Fuentes de Agua") %>%
  setView(lng = -89.617, lat = 20.967, zoom = 11)
```

### **üìä Datos Cr√≠ticos**

-   **300 L/hab/d√≠a** consumo promedio
-   **40%** p√©rdidas en red distribuci√≥n
-   **25%** incremento demanda (2019-2024)
-   **3 plantas** tratamiento aguas residuales

------------------------------------------------------------------------

## üöó Movilidad Sostenible: Retos y Oportunidades {background-color="#34495e"}

::: columns
::: {.column width="50%"}
### **El Desaf√≠o de la Movilidad**

üöó **85%** viajes en transporte privado

üöå **Va y Ven**: 180,000 usuarios/d√≠a

üö≤ **BiciRuta**: 28 km de ciclov√≠as

‚è±Ô∏è **45 min** tiempo promedio de viaje

### **Impacto Ambiental**

-   **35%** emisiones CO‚ÇÇ por transporte
-   **20 Œºg/m¬≥** PM2.5 promedio anual
-   **8 d√≠as** contingencias 2024
-   **+28%** parque vehicular (2019-2024)

```{r modal-split}
#| fig-cap: "Divisi√≥n Modal M√©rida vs Ciudades Sustentables"

# Datos divisi√≥n modal
ciudades <- data.frame(
  Ciudad = rep(c("M√©rida", "Copenhague", "Medell√≠n", "Bogot√°"), each = 4),
  Modo = rep(c("Auto privado", "Transporte p√∫blico", "Bicicleta", "Caminata"), 4),
  Porcentaje = c(
    # M√©rida
    58, 25, 2, 15,
    # Copenhague
    25, 20, 35, 20,
    # Medell√≠n
    35, 40, 5, 20,
    # Bogot√°
    25, 55, 5, 15
  )
)

p5 <- ggplot(ciudades, aes(x = Ciudad, y = Porcentaje, fill = Modo)) +
  geom_bar(stat = "identity", position = "stack", alpha = 0.8) +
  scale_fill_manual(values = c("Auto privado" = "#e74c3c", "Transporte p√∫blico" = "#3498db",
                              "Bicicleta" = "#2ecc71", "Caminata" = "#f39c12")) +
  labs(
    title = "Divisi√≥n Modal: M√©rida vs Ciudades Referencia",
    subtitle = "% de viajes por modo de transporte",
    x = "Ciudad", y = "Porcentaje de Viajes (%)",
    fill = "Modo de Transporte"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

ggplotly(p5) %>%
  layout(plot_bgcolor = 'rgba(0,0,0,0)', paper_bgcolor = 'rgba(0,0,0,0)')
```
:::

::: {.column width="50%"}
### **üöÄ Proyectos Transformadores**

-   **Tren Maya**: Terminal en Teya (2024)
-   **BRT Norte-Sur**: En planeaci√≥n
-   **Ampliaci√≥n BiciRuta**: Meta 50 km
-   **Electromovilidad**: Autobuses el√©ctricos piloto

```{r rutas-transporte}
#| fig-cap: "Red de Transporte P√∫blico M√©rida"

# Datos principales rutas transporte
rutas_tp <- data.frame(
  ruta = c("Va y Ven Ruta 1", "Va y Ven Ruta 2", "Perif√©rico", "Centro-Norte",
           "Oriente-Poniente", "Ruta Maya", "BiciRuta Troncal", "Circuito Colonias"),
  tipo = c("BRT", "BRT", "Urbano", "Urbano", "Urbano", "Tur√≠stico", "Ciclovia", "Urbano"),
  usuarios_dia = c(45000, 35000, 25000, 18000, 22000, 5000, 2500, 15000),
  km_longitud = c(22, 18, 35, 15, 20, 12, 28, 25),
  estado = c("Operando", "Operando", "Operando", "Operando", "Operando", 
             "Operando", "Operando", "Operando")
)

# Gr√°fico rutas
p6 <- ggplot(rutas_tp, aes(x = km_longitud, y = usuarios_dia, 
                          color = tipo, size = usuarios_dia)) +
  geom_point(alpha = 0.8) +
  geom_text(aes(label = ruta), vjust = -1.2, size = 2.5, color = "white") +
  scale_color_brewer(type = "qual", palette = "Set2") +
  scale_size_continuous(range = c(4, 12)) +
  labs(
    title = "Eficiencia Rutas de Transporte",
    subtitle = "Usuarios diarios vs Longitud de ruta",
    x = "Longitud Ruta (km)", y = "Usuarios por D√≠a",
    color = "Tipo", size = "Usuarios"
  )

ggplotly(p6) %>%
  layout(plot_bgcolor = 'rgba(0,0,0,0)', paper_bgcolor = 'rgba(0,0,0,0)')
```

### **üì± Tecnolog√≠a para la Movilidad**

-   **App Va y Ven**: Tiempos real
-   **Google Maps**: Integraci√≥n rutas
-   **Waze**: Datos tr√°fico colaborativo
-   **Sensores inteligentes**: Conteo veh√≠culos
:::
:::

------------------------------------------------------------------------

## üõ†Ô∏è Herramientas y Datos Disponibles {background-color="#2c3e50"}

::: columns
::: {.column width="50%"}
### **üèõÔ∏è Fuentes Oficiales**

-   **CONAGUA**: Datos hidrol√≥gicos y meteorol√≥gicos
-   **SEMARNAT Yucat√°n**: Calidad aire y residuos
-   **INEGI**: Censos y encuestas urbanas
-   **Ayuntamiento M√©rida**: Datos abiertos
-   **SEDUMA**: Secretar√≠a Desarrollo Urbano

### **üåê Plataformas Tecnol√≥gicas**

-   **SINAICA**: Sistema Nacional Informaci√≥n Calidad Aire
-   **Monitor Atmosf√©rico**: Universidad Aut√≥noma Yucat√°n
-   **OpenStreetMap**: Mapeo colaborativo M√©rida
-   **NASA FIRMS**: Detecci√≥n incendios
-   **Copernicus Climate Data**: Datos clim√°ticos

### **üìä Herramientas de An√°lisis**

-   **R/RStudio**: An√°lisis estad√≠stico
-   **QGIS**: Sistemas informaci√≥n geogr√°fica
-   **Python**: Machine learning ambiental
-   \*\*Google
:::
:::
:::
:::
) |>
add_raster_layer(
id             = "temp",
source         = "temp",
raster_opacity = 0.7
) |> mapgl::add_continuous_legend()
colores <- c("#2b83ba", "#7fbeac", "#b4e1a7",
"#ece3a1", "#edc486", "#de4e31")
mapgltemp <- maplibre(
zoom   = 9,
center = c(-89.617, 20.967)          # Mérida
) |>
add_image_source(
id     = "temp",
data   = temMid,
colors = colores
) |>
add_raster_layer(
id             = "temp",
source         = "temp",
raster_opacity = 0.6) |> add_con
mapgltemp <- maplibre(
zoom   = 9,
center = c(-89.617, 20.967)          # Mérida
) |>
add_image_source(
id     = "temp",
data   = temMid,
colors = colores
) |>
add_raster_layer(
id             = "temp",
source         = "temp",
raster_opacity = 0.6)
mapgltemp
mapgltemp <- maplibre(
zoom   = 9,
center = c(-89.617, 20.967)          # Mérida
) |>
add_image_source(
id     = "temp",
data   = temMid,
colors = colores
) |>
add_raster_layer(
id             = "temp",
source         = "temp",
raster_opacity = 0.6) |>
add_continuous_legend(
legend_title = "Temperatura (°C)",
values       = cortes,     # stops numéricos
colors       = colores,    # misma rampa
position     = "bottom-left",
width        = 240         # px; agranda la barra
# margin_top / right / bottom / left opcionales (px)
)
mapgltemp <- maplibre(
zoom   = 9,
center = c(-89.617, 20.967)          # Mérida
) |>
add_image_source(
id     = "temp",
data   = temMid,
colors = colores
) |>
add_raster_layer(
id             = "temp",
source         = "temp",
raster_opacity = 0.6) |>  add_continuous_legend(
legend_title = "Temperatura (°C)",
values       = cortes,     # stops numéricos
colors       = colores,    # misma rampa
position     = "bottom-left",
width        = 240         # px; agranda la barra
# margin_top / right / bottom / left opcionales (px)
)
mapgltemp
mapgltemp <- maplibre(
zoom   = 9,
center = c(-89.617, 20.967)          # Mérida
) |>
add_image_source(
id     = "temp",
data   = temMid,
colors = colores
) |>
add_raster_layer(
id             = "temp",
source         = "temp",
raster_opacity = 0.6) |>  add_continuous_legend(
legend_title = "Temperatura (°C)",
values       = cortes,     # stops numérico    # misma rampa
position     = "bottom-left",
width        = 240         # px; agranda la barra
# margin_top / right / bottom / left opcionales (px)
)
mapgltemp <- maplibre(
zoom   = 9,
center = c(-89.617, 20.967)          # Mérida
) |>
add_image_source(
id     = "temp",
data   = temMid,
colors = colores
) |>
add_raster_layer(
id             = "temp",
source         = "temp",
raster_opacity = 0.6) |>  add_continuous_legend(
legend_title = "Temperatura (°C)",
values       = cortes,
colors = colores,# stops numérico    # misma rampa
position     = "bottom-left",
width        = 240         # px; agranda la barra
# margin_top / right / bottom / left opcionales (px)
)
mapgltemp <- maplibre(
zoom   = 9,
center = c(-89.617, 20.967)          # Mérida
) |>
add_image_source(
id     = "temp",
data   = temMid,
colors = colores
) |>
add_raster_layer(
id             = "temp",
source         = "temp",
raster_opacity = 0.6) |>  add_continuous_legend(
legend_title = "Temperatura (°C)",
colors = colores,# stops numérico    # misma rampa
position     = "bottom-left",
width        = 240         # px; agranda la barra
# margin_top / right / bottom / left opcionales (px)
)
mapgltemp
cortes <- seq(rng[1], rng[2], length.out = length(colores))
# 3) Cortes (mismo largo que la paleta)
rng    <- terra::minmax(temMid)            # p.ej. 24.8 – 44.3
cortes <- seq(rng[1], rng[2], length.out = length(colores))
# 3) Cortes (mismo largo que la paleta)
rng    <- terra::minmax(temMid)            # p.ej. 24.8 – 44.3
cortes <- seq(rng[1], rng[2], length.out = length(colores))
# Datos de temperatura por sectores de Mérida (basados en estudios reales)
sectores <- data.frame(
Sector = c("Centro Histórico", "Norte (Montejo)", "Poniente", "Oriente",
"Sur", "Dzityá", "Cholul", "Conkal"),
Temp_Max_C = c(42.5, 38.2, 41.0, 40.8, 39.5, 37.8, 38.5, 37.2),
Cobertura_Verde_Pct = c(15, 35, 20, 18, 22, 45, 40, 50),
Densidad_Pob = c("Muy Alta", "Alta", "Alta", "Media", "Media", "Baja", "Baja", "Baja")
)
p2 <- ggplot(sectores, aes(x = Cobertura_Verde_Pct, y = Temp_Max_C,
color = Densidad_Pob, size = Temp_Max_C)) +
geom_point(alpha = 0.8) +
geom_text(aes(label = Sector), vjust = -1.2, size = 3, color = "white") +
scale_color_manual(values = c("Muy Alta" = "#e74c3c", "Alta" = "#f39c12",
"Media" = "#f1c40f", "Baja" = "#2ecc71")) +
scale_size_continuous(range = c(4, 10)) +
labs(
title = "Cobertura Verde vs Temperatura",
subtitle = "Sectores de Mérida, Yucatán",
x = "Cobertura Verde (%)", y = "Temperatura Máxima (°C)",
color = "Densidad", size = "Temp (°C)"
)
ggplotly(p2) %>%
layout(plot_bgcolor = 'rgba(0,0,0,0)', paper_bgcolor = 'rgba(0,0,0,0)')
-   **Satélites Landsat**: Temperatura superficial
# Crear datos simulados de temperatura para Mérida
set.seed(123)
merida_temp <- data.frame(
lat = c(20.967, 20.976, 20.955, 20.945, 20.985, 20.940, 20.990, 20.935,
20.980, 20.950, 20.975, 20.960, 20.970, 20.965, 20.958),
lng = c(-89.617, -89.627, -89.620, -89.605, -89.635, -89.610, -89.640, -89.600,
-89.625, -89.615, -89.630, -89.622, -89.612, -89.618, -89.608),
temperatura = c(42.5, 39.2, 41.0, 40.8, 38.5, 39.5, 37.8, 40.2,
38.8, 40.5, 38.0, 39.8, 41.2, 40.0, 39.6),
zona = c("Centro", "Norte", "Centro", "Oriente", "Norte", "Sur", "Norte", "Oriente",
"Norte", "Centro", "Norte", "Centro", "Centro", "Centro", "Oriente")
)
# Clasificar temperaturas
merida_temp$categoria <- cut(merida_temp$temperatura,
breaks = c(-Inf, 38, 39, 40, 41, Inf),
labels = c("Templada", "Cálida", "Caliente", "Muy Caliente", "Extrema"))
# Crear mapa interactivo
leaflet(merida_temp) %>%
addTiles() %>%
addCircleMarkers(
~lng, ~lat,
color = ~case_when(
categoria == "Extrema" ~ "#8b0000",
categoria == "Muy Caliente" ~ "#ff4757",
categoria == "Caliente" ~ "#ff6348",
categoria == "Cálida" ~ "#ffa502",
TRUE ~ "#3498db"
),
popup = ~paste("Zona:", zona, "<br>Temp:", round(temperatura, 1), "°C"),
radius = ~temperatura/4,
opacity = 0.8,
fillOpacity = 0.6
) %>%
addLegend("bottomright",
colors = c("#3498db", "#ffa502", "#ff6348", "#ff4757", "#8b0000"),
labels = c("Templada", "Cálida", "Caliente", "Muy Caliente", "Extrema"),
title = "Temperatura") %>%
setView(lng = -89.617, lat = 20.967, zoom = 12)
# 3) Cortes (mismo largo que la paleta)
```
# Capa de temperatura media diaria (LST) 2024
temMid <- rast("Datos/LST_Day_Stats_2024.tif")$LST_Day_Mean
colores <- c("#2b83ba", "#7fbeac", "#b4e1a7",
"#ece3a1", "#edc486", "#de4e31")
library(png)     # leer PNG
library(plotly)
# 1. Leer la imagen (devuelve un array 3-4 dimensiones)
img <- readPNG("Datos/mapa_temperaturas_con_perfiles.png")
# 2. Convertir a data-URI que entiende Plotly
uri <- plotly:::raster2uri(img)
# 3. Crear figura vacía y pegar la imagen como 'layout$image'
p <- plot_ly(height = dim(img)[1], width = dim(img)[2]) |>
layout(
images = list(
list(
source  = uri,
xref    = "x",
yref    = "y",
x       = 0,                   # esquina inferior-izquierda
y       = 0,
sizex   = dim(img)[2],        # ancho en px
sizey   = dim(img)[1],        # alto en px
sizing  = "stretch",
layer   = "below"
)
),
xaxis = list(visible = FALSE, range = c(0, dim(img)[2])),
yaxis = list(visible = FALSE, range = c(dim(img)[1], 0)),
dragmode = "zoom"                 # pan + zoom con el ratón
)
p      # aparece en el visor (RStudio / Quarto / browser)
# 1. Leer la imagen (devuelve un array 3-4 dimensiones)
img <- readPNG("Datos/mapa_temperaturas_con_perfiles.png")
# 2. Convertir a data-URI que entiende Plotly
uri <- plotly:::raster2uri(img)
v2017 <-rast::terra("Datos/2017_mod.tif")
v2024 <-terra::rast("Datos/2024_mod.tif")
v2017 <-terra::rast("Datos/2017_mod.tif")
v2024 <-terra::rast("Datos/2024_mod.tif")
mapview::mapview(v2017)
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(sf)
library(DT)
library(kableExtra)
library(ggplot2)
library(viridis)
library(RColorBrewer)
library(plotly)
library(mapgl)
library(tmap)
# Configuración para gráficas
theme_set(theme_minimal() +
theme(
text = element_text(color = "white"),
plot.background = element_rect(fill = "transparent", color = NA),
panel.background = element_rect(fill = "transparent", color = NA),
panel.grid = element_line(color = "rgba(255,255,255,0.1)"),
axis.text = element_text(color = "white"),
axis.title = element_text(color = "white"),
legend.text = element_text(color = "white"),
legend.title = element_text(color = "white"),
plot.title = element_text(color = "#64ffda", size = 16, face = "bold"),
plot.subtitle = element_text(color = "white", size = 12)
))
v2017 <-terra::rast("Datos/2017_mod.tif")
v2024 <-terra::rast("Datos/2024_mod.tif")
tmap_mode("view")        # "plot" volvería a modo estático
# 3. Estilo de color (cuantiles y paleta inversa de verdes)
pal <- "-Greens"         # el guion previo invierte la paleta
# 4-A. Mapa 2017
tm2017 <- tm_shape(v2017) +
tm_raster(style = "quantile",
palette = pal,
title = "NDVI 2017") +
tm_layout(main.title = "Vegetación 2017",
legend.outside = TRUE)
tm2017          # se abre en visor Leaflet
# 4-B. Mapa 2024
tm2024 <- tm_shape(v2024) +
tm_raster(style = "quantile",
palette = pal,
title = "NDVI 2024") +
tm_layout(main.title = "Vegetación 2024",
legend.outside = TRUE)
tm2024
library(terra)
library(terra)
# abre tu raster original
v2024 <- rast("Datos/2024_mod.tif")
# ► comprimir con LZW (sin pérdida) + tiling, mismo datatype
writeRaster(
v2024,
filename = "Datos/2024_mod_LZW.tif",
overwrite = TRUE,
gdal = c("COMPRESS=LZW",  # compresión sin pérdida
"PREDICTOR=2",   # mejora para datos continuos
"TILED=YES")     # imprescindible para COG / lectura veloz
)
# ► (opcional) si tus valores son 0-1 puedes escalar a entero de 2 bytes:
v2024_i <- round(v2024 * 10000)    # 0-10000 → INT16
writeRaster(
v2024_i,
"Datos/2024_mod_INT16.tif",
datatype = "INT2S",              # signed 16-bit
overwrite = TRUE,
gdal = c("COMPRESS=LZW", "PREDICTOR=2", "TILED=YES")
)
v2017 <-terra::rast("Datos/2017_mod_INT16.tif")
v2024 <-terra::rast("Datos/2024_mod_LZW.tif")
mapview::mapview(v2024)
v2024_i <- round(v2017*10000)
writeRaster(
v2017_i,
"Datos/2017_mod_INT16.tif",
datatype = "INT2S",              # signed 16-bit
overwrite = TRUE,
gdal = c("COMPRESS=LZW", "PREDICTOR=2", "TILED=YES")
)
v2017_i <- round(v2017*10000)
writeRaster(
v2017_i,
"Datos/2017_mod_INT16.tif",
datatype = "INT2S",              # signed 16-bit
overwrite = TRUE,
gdal = c("COMPRESS=LZW", "PREDICTOR=2", "TILED=YES")
)
v2017 <-terra::rast("Datos/2017_mod_INT16.tif")
v2024 <-terra::rast("Datos/2024_mod_INT16.tif")
tmap_mode("view")        # "plot" volvería a modo estático
# 3. Estilo de color (cuantiles y paleta inversa de verdes)
pal <- "-Greens"         # el guion previo invierte la paleta
# 4-A. Mapa 2017
tm2017 <- tm_shape(v2017) +
tm_raster(style = "quantile",
palette = pal,
title = "NDVI 2017") +
tm_layout(main.title = "Vegetación 2017",
legend.outside = TRUE)
tm2017          # se abre en visor Leaflet
plot(v2024)
m1 <- maplibre()
m1 <- maplibre(zoom = 9, center = c(-89.617, 20.967)) |>
add_image_source(
id             = "2024",
data         = v2024,
colors         = c("#2b83ba", "#7fbeac", "#b4e1a7", "#ece3a1", "#edc486", "#de4e31")) |>
add_raster_layer(
id             = "2024",
source         = "2024",
raster_opacity = 0.6)
m1
v2017 <-terra::rast("Datos/2017_mod.tif")
v2024 <-terra::rast("Datos/2024_mod.tif")
m1 <- maplibre(zoom = 9, center = c(-89.617, 20.967)) |>
add_image_source(
id             = "2024",
data         = v2024,
colors         = c("#2b83ba", "#7fbeac", "#b4e1a7", "#ece3a1", "#edc486", "#de4e31")) |>
add_raster_layer(
id             = "2024",
source         = "2024",
raster_opacity = 0.6)
m1
m2 <- maplibre(zoom = 9, center = c(-89.617, 20.967)) |>
add_image_source(
id             = "2024",
data         = v2024,
colors         = c("#2b83ba", "#7fbeac", "#b4e1a7", "#ece3a1", "#edc486", "#de4e31")) |>
add_raster_layer(
id             = "2024",
source         = "2024",
raster_opacity = 0.6)
mapgl::compare(m1, m2)
mapgl::compare(m1, m2)
v2017 <-terra::rast("Datos/2017_mod.tif")
v2024 <-terra::rast("Datos/2024_mod.tif")
m1 <- maplibre(zoom = 9, center = c(-89.617, 20.967)) |>
add_image_source(
id             = "2024",
data         = v2024,
colors         = c("#2b83ba", "#7fbeac", "#b4e1a7", "#ece3a1", "#edc486", "#de4e31")) |>
add_raster_layer(
id             = "2024",
source         = "2024",
raster_opacity = 0.6)
m2 <- maplibre(zoom = 9, center = c(-89.617, 20.967)) |>
add_image_source(
id             = "2024",
data         = v2024,
colors         = c("#2b83ba", "#7fbeac", "#b4e1a7", "#ece3a1", "#edc486", "#de4e31")) |>
add_raster_layer(
id             = "2024",
source         = "2024",
raster_opacity = 0.6)
mapgl::compare(m1, m2)
## paleta de color verde
# Paleta de colores verde para el mapa
# Paleta de colores verde para el mapa
coloresverdes <- c(
"#00441B",  # verde muy oscuro
"#1B7837",  # verde bosque
"#4DAF4A",  # verde medio
"#7FBC41",  # verde lima
"#B8E186",  # verde pastel
"#E7F8D9"   # casi blanco verdoso
)
## paleta de color verde
# Paleta de colores verde para el mapa
# Paleta de colores verde para el mapa
coloresverdes <- c(
"#00441B",  # verde muy oscuro
"#1B7837",  # verde bosque
"#4DAF4A",  # verde medio
"#7FBC41",  # verde lima
"#B8E186",  # verde pastel
"#E7F8D9"   # casi blanco verdoso
)
v2017 <-terra::rast("Datos/2017_mod.tif")
v2024 <-terra::rast("Datos/2024_mod.tif")
m1 <- maplibre(zoom = 9, center = c(-89.617, 20.967)) |>
add_image_source(
id             = "2017",
data         = v2017,
colors         =coloresverdes ) |>
add_raster_layer(
id             = "2017",
source         = "2017",
raster_opacity = 0.6)
m2 <- maplibre(zoom = 9, center = c(-89.617, 20.967)) |>
add_image_source(
id             = "2024",
data         = v2024,
colors         = coloresverdes) |>
add_raster_layer(
id             = "2024",
source         = "2024",
raster_opacity = 0.6)
mapgl::compare(m1, m2)
## paleta de color verde
# Paleta de colores verde para el mapa
# Paleta de colores verde para el mapa
coloresverdes <- c(
"#00541B",  # verde muy oscuro
"#1B7837",  # verde bosque
"#4DAF4A",  # verde medio
"#7FBC41",  # verde lima
"#B8E186",  # verde paste
"#FFFFFF"  # blanco
)
v2017 <-terra::rast("Datos/2017_mod.tif")
v2024 <-terra::rast("Datos/2024_mod.tif")
m1 <- maplibre(zoom = 9, center = c(-89.617, 20.967)) |>
add_image_source(
id             = "2017",
data         = v2017,
colors         =coloresverdes ) |>
add_raster_layer(
id             = "2017",
source         = "2017",
raster_opacity = 0.6)
m2 <- maplibre(zoom = 9, center = c(-89.617, 20.967)) |>
add_image_source(
id             = "2024",
data         = v2024,
colors         = coloresverdes) |>
add_raster_layer(
id             = "2024",
source         = "2024",
raster_opacity = 0.6)
mapgl::compare(m1, m2)
## paleta de color verde
# Paleta de colores verde para el mapa
# Paleta de colores verde para el mapa
coloresverdes <- rev(c(
"#00541B",  # verde muy oscuro
"#1B7837",  # verde bosque
"#4DAF4A",  # verde medio
"#7FBC41",  # verde lima
"#B8E186",  # verde paste
"#FFFFFF"  # blanco
))
v2017 <-terra::rast("Datos/2017_mod.tif")
v2024 <-terra::rast("Datos/2024_mod.tif")
m1 <- maplibre(zoom = 9, center = c(-89.617, 20.967)) |>
add_image_source(
id             = "2017",
data         = v2017,
colors         =coloresverdes ) |>
add_raster_layer(
id             = "2017",
source         = "2017",
raster_opacity = 0.5)
m2 <- maplibre(zoom = 9, center = c(-89.617, 20.967)) |>
add_image_source(
id             = "2024",
data         = v2024,
colors         = coloresverdes) |>
add_raster_layer(
id             = "2024",
source         = "2024",
raster_opacity = 0.5)
mapgl::compare(m1, m2)
